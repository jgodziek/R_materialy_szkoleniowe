#używanie R jako kalkulatora
6+1
7*7
3.23*8.70798

sqrt(2) #pierwiastek

#błąd składni
#błąd - wykorzystanie przecinka jako separatora dziesiętnego
4+2,8

#błąd - literówka w nazwie funkcji
squrt(2)


#przypisanie wartości do zmiennej
a <- 7
#wydrukowanie wartości zmiennej 
a

b = 13
c = a - b
#pokazanie wartości zmiennej - ten sam efekt
print(c)
c


#różnica między operatorami przypisania '=' a '<-'
mean(x = 1:10)
x

mean(x <- 1:10)
x

#funkcja rm() do wyczyszczenia zmiennych zapisanych w pamięci
rm(a)
rm(b,c)


#wielkość znaków w R ma znaczenie!
#zmienna 'OBSZAR' i zmienna 'obszar' to dwa różne obiekty!
#zmienna 'Droga' i zmienna 'droga' to dwa różne obiekty!

#sprawdzenie dokumentacji funkcji
?round

#wykonywanie funkcji z dwoma argumentami
round(x = 2.4522, digits = 2)
round(2.4522, 2) #nie trzeba podawać nazw argumentów - wystarczy umieścić
#odpowiadające im wartości w odpowiedniej kolejności
#(najpierw cyfra do zaokrąglenia, później informacja o liczbie miejsc po przecinku)


#podstawowe typy zmiennych
t <- 'Żyleta' #zmienna tekstowa (character)
class(t) #funkcja zwraacająca informację o typie zmiennej
z <- 5 #zmienna liczbowa (numeric; z miejscami po przecinku)
z <- 43.173
class(z)
i <- 2L #integer (liczby całkowite)
class(i)


#wektory - zbiory zmiennych
miasta <- c('Ruda Śląska', 'Mikołów', 'Bytom', 'Gliwice') #wektor zmiennych tekstowych

miasta[2] #wyświetlenie drugiego elementu z wektoru "miasta"
class(miasta) #sprawdzenie typu danych w wektorze "miasta"

liczby <- c(2:7) #wektor z liczbami całkowitymi od 2 do 7
liczby[1]
#w języku R indeksowanie elementów rozpoczyna się od 1 (nie od 0) !!!

rm(liczby, miasta)


#pakiet = biblioteka
#instalacja pakietu/biblioteki
install.packages('sf')

#wczytanie pakietu/biblioteki
library(sf)


#wczytywanie pliku shapefile
?st_read
gzm_gminy <- st_read('D:/JG/IEDS/_Dydaktyka/2023_24_sem_zimowy/programowanie_w_GIS/dane/gzm_gminy.shp')
#uwaga! w ścieżce dostępu muszą być slashe (/), nie backslashe (/)
#/ na / można zamienić przy użyciu skrótu ctrl+F (po zaznaczeniu ścieżki dostępu)

#sprawdzenie informacji o warstwie (układ współrzędnych, tabela atrybutów)
gzm_gminy

#wyświetlenie geometrii warstwy
plot(gzm_gminy)

#sprawdzenie klasy obiektów
class(gzm_gminy)

#dostęp do wartości z określonej kolumny tabeli atrybutów
gzm_gminy$jpt_nazwa_

#wyświetlenie listy z nazwami kolumn
colnames(gzm_gminy)

#sprawdzenie liczby obiektów
nrow(gzm_gminy)

#sprawdzenie typów danych w poszczególnych kolumnach
str(gzm_gminy)

#wybranie kolumny wg numeru
gzm_gminy[,3]

#wybranie wiersza wg numeru
gzm_gminy[3,]


#wybranie danych z kolumny i wiersza wg numeru
#[nr wiersza, nr kolumny]
gzm_gminy[23,3]

#wybieranie wiersza wg nazwy miejscowości
gzm_gminy[gzm_gminy$jpt_nazwa_ == 'Mikołów', ]

#wybieranie wierszy wg nazw wielu miejscowości
gzm_gminy[gzm_gminy$jpt_nazwa_ %in% c('Mikołów', 'Katowice', 'Sosnowiec'), ]

#wybieranie wiersza wg nazwy miejscowości plus utworzenie nowego obiektu
gmina <- gzm_gminy[gzm_gminy$jpt_nazwa_ == 'Mikołów', ]

gmina #sprawdzenie obiektu

#wyświetlenie geometrii
plot(gmina)

#wyświetlenie informacji o układzie współrzędnych
st_crs(gmina)

#zmiana układu współrzędnych na inny
#układ współrzędnych 2000
#https://pl.wikipedia.org/wiki/Uk%C5%82ad_wsp%C3%B3%C5%82rz%C4%99dnych_2000 
?st_transform
gmina <- st_transform(x = gmina, crs = 2177)

gmina
st_crs(gmina)

#eksport granic wybranej gminy do pliku shp
st_write(gmina, 'D:/JG/IEDS/_Dydaktyka/2023_24_sem_zimowy/programowanie_w_GIS/dane/gmina.shp')
